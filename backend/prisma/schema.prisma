// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  role        Role     @default(TOURIST)
  name        String?
  savedRoutes Route[]
  savedEvents Event[]  @relation("SavedEvents")
  organizedEvents Event[] @relation("OrganizerEvents")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String
  region      String
  type        String
  date        DateTime
  budgetMin   Int?
  budgetMax   Int?
  imageUrl    String?
  locationLat Float?
  locationLng Float?
  organizerId String?
  organizer   User?    @relation("OrganizerEvents", fields: [organizerId], references: [id])
  savedBy     User[]   @relation("SavedEvents")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Route {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  name      String
  days      Int
  budget    Int
  interests String[]
  stops     Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Partner {
  id        String   @id @default(cuid())
  name      String
  category  String
  discount  String?
  website   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  TOURIST
  ORGANIZER
  ADMIN
}
